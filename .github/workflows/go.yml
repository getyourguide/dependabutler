name: Go

permissions:
  contents: read

on: [push]

concurrency:
  group: ${{ github.workflow }}${{ github.ref_name != github.event.repository.default_branch && github.ref || github.run_id }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.24.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Environment information
        run: |
          uname -a
          go version
          go env
      - name: Vet
        if: matrix.platform == 'ubuntu-latest'
        run: go vet -v ./...
      - name: Lint
        if: matrix.platform == 'ubuntu-latest'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install golang.org/x/lint/golint@latest
          golint -set_exit_status ./...
      - name: staticcheck.io
        if: matrix.platform == 'ubuntu-latest'
        uses: dominikh/staticcheck-action@v1.4.0
        with:
          install-go: false
      - name: gofumpt formatting
        if: matrix.platform == 'ubuntu-latest'
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install mvdan.cc/gofumpt@latest
          gofumpt -d .
          [ -z "$(gofumpt -l .)" ]
      - name: Test with -race
        run: go test -vet=off -race -count=1 ./...
      - name: Test with coverage report
        run: |
          go test -vet=off -count=1 ./... -coverprofile cover.out
          go tool cover -html cover.out -o coverage-${{ matrix.platform }}.html
      - name: Archive code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.platform }}
          path: coverage-${{ matrix.platform }}.html
